<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<title>JavaScript编码规范</title>
		<style>
			/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}
sup {
   vertical-align: super;
   font-size: smaller;
}

sub {
  vertical-align: sub;
  font-size: smaller;
}

/* Generic styles */
body {
	background: #f5f5f5;
  color: #444;
  font-family: 'Microsoft Yahei','Book Antiqua',Palatino,FreeSerif,serif;
  font-size: 16px;
  margin: 0;
  padding: 0;
}

h1, h2, h3, h4, h5, h6,
code, pre,
ul, ol,
p,
hr {
  margin: 1.5em 0 0.5em 0;
}
h1, h2, h3, h4, h5, h6 {
  line-height: 1.5em;
}

ul, ol,
p,
hr {
	line-height: 2em;
}

code, pre {
  line-height: 1.5em;
}

*:first-child {
	margin-top: 0;
}

/* Headers */
h1, h2, h3, h4, h5, h6 {
	font-weight: bold;
}

h1 {
	font-size: 3.5em;
}

h2 {
	font-size: 2.5em;
}

h3 {
	font-size: 2em;
}

h4 {
	font-size: 1.5em
}

h5 {
	font-size: 1.2em;
}

h6 {
	font-size: 1em;
}

/* Lists */
ul, ol {
	padding-left: 2em;
}

ul {
	list-style-type: disc;	
}

ol {
	list-style-type: decimal;
}

/* Code and pre */
code, pre {
	font-family: "Bitstream Vera Sans Mono", "Courier", monospace;
}
code {
	background: none repeat scroll 0 0 #F8F8FF;
  border: 1px solid #DEDEDE;
  border-radius: 3px 	;
  padding: 0 0.2em;
}
pre {
	border-left: 5px solid #eee;
	margin-left: 2em;	
	padding-left: 1em;
}
pre > code {
	background: transparent;
	border: none;
	padding: 0;
  word-wrap: break-word;
}

/* Links */
a {
  color: #e91e63;
}

a:visited {
  color: #666;
}

/* Inlines */
strong {
	font-weight: bold;
}

em {
	font-style: italic;
}

/* Container */
.container {
	background: #FFF;
	padding: 30px 50px;
	margin: 0 auto;
	width: 700px;
}

		</style>
	</head>
	<body>
		<div class="container">
			<h2 id="javascript-">JavaScript编码规范</h2>
<h3 id="-">命名规范</h3>
<h4 id="-">通用命名规则</h4>
<ul>
<li>所有变量必须是有意义的英文，严厉禁止拼音；  </li>
<li>变量命名统一采用小写，单词直接以下划线分割；  </li>
<li>变量允许使用公认英文缩写，例如<code>nav</code>；  </li>
<li>常量必须所有单词大写，并且每个单词间加下划线；    </li>
<li>&quot;on&quot;只能用作事件的命名；  </li>
<li>所有全局变量必须初始化；</li>
<li>保留字以及特有的dom属性不能作为变量名。  </li>
</ul>
<h4 id="-">变量命名规范</h4>
<ul>
<li>全部采用小写字母，以下划线<code>_</code>分割。  </li>
<li>特殊简写：小范围作用域临时变量，如函数内部的局部变量或参数：o(Object)、e(Element)、evt(event)、err(error)、res(result)等；  </li>
<li>循环变量：i、j、k以此类推；</li>
</ul>
<h4 id="-">模块对象命名规范</h4>
<p>模块对象即模块中声明的顶级对象名称。
采用小驼峰：即第一个单词首字母小写其他单词首字母大写，例如：</p>
<pre><code>var wechatMap = {
  init: function(){

  }
}
</code></pre><h4 id="-">函数命名规范</h4>
<ul>
<li>独立函数（公共函数）：全部采用【小写字母 + 下划线<code>_</code>】方式命名；</li>
<li>模块内部函数：使用【动词+名词】小驼峰法，如： <code>getClientIp</code>、<code>getList</code>、<code>getVersion</code>；  </li>
<li>涉及逻辑返回值的函数：<code>is</code>、<code>has</code>、<code>can</code>，如：<code>isAdmin</code>、<code>hasChild</code>；  </li>
</ul>
<h3 id="-">书写规范</h3>
<h4 id="-">对齐和缩进</h4>
<ul>
<li>必须使用空格键进行代码缩进，建议设置编辑器的Tab为2个空格的宽度；</li>
<li>所有语句结束后，必须使用 ; 号结束；</li>
<li>大括号前面不能换行；</li>
<li>操作符必须使用空格隔开；</li>
</ul>
<h4 id="-">语法结构</h4>
<p>普通代码段应该如下：</p>
<pre><code>while(!is_done){
  doSomething();
  is_done = moreTodo();
}
</code></pre><p>变量定义方法如下：</p>
<pre><code>var a = null;
</code></pre><p>函数定义方法如下：</p>
<pre><code>var func_a = function(){
  var a = 0;
  ...
}
</code></pre><p>if 语句应该像这样：</p>
<pre><code>if(some_condition){
  statements;
}else if(some_other_condition){
  statements;
}else{
  statements;
}
</code></pre><p>for 语句应该像这样：</p>
<pre><code>for(initialization; condition; update){
  statements;
}
</code></pre><p>while 语句应该像这样：</p>
<pre><code>while(!is_done){
  doSomething();
  is_done = moreTodo();
}
</code></pre><p>do ... while 语句应该像这样：</p>
<pre><code>do{
  statements;
}while(condition);
</code></pre><p>switch 语句应该像这样： </p>
<pre><code>switch(condition){
  case &quot;A&quot;: 
      statements;
      break;
  case &quot;B&quot;: 
     statements;
      break;
  default:
      statements;
      break;
}
</code></pre><p>try ... catch 语句应该像这样：</p>
<pre><code>try{
  statements;
}catch(ex){
  statements;
}finally{
  statements;
</code></pre><p>  }</p>
<p>单行的 if - else，while 或者 for 语句也必须加入括号：</p>
<pre><code>if(condition){
  statement;
}

while(condition){
  statement;
}

for(intialization; condition; update){
  statement;
}
</code></pre><h3 id="javascript-">Javascript编写风格</h3>
<h4 id="-">单引号和双引号的问题</h4>
<p>Javascript中单引号和双引号没有太大区别，我们和PHP规范统一，即：可以使用单引号的地方，全部使用单引号。  </p>
<h4 id="-">多变量定义规范</h4>
<p>多个变量定义时，只声明一次var，采用【逗号】分割：</p>
<pre><code>var _self = this,
    count = 0,
    sum = 0,
    total = 0;
</code></pre><h4 id="-">对象定义规范</h4>
<p>在Javascript中，所有类型都是对象，包括string类型。函数的定义，统一使用以下方式：</p>
<pre><code>var a = function(){...};
</code></pre><p>最后要加上 “;”号，不要再使用以下方式：</p>
<pre><code>function a(){}
</code></pre><p>对象定义规范：</p>
<ul>
<li>string类型定义：<code>var str = &#39;xxxxxx&#39;;</code></li>
<li>function类型定义：<code>var func = function(){...};</code></li>
<li>array类型定义：<code>var arr = new Array();</code></li>
<li>object类型定义：<code>var obj = {&#39;name&#39;: &#39;xxxxxx&#39;, &#39;age&#39;: &#39;10&#39;}</code></li>
</ul>
<h4 id="-">选择器命名方式</h4>
<p>为了避免class或id选择器与CSS造成的紧耦合问题，html中定义中的选择器名称统一以大写<code>J_</code>或<code>Z_</code>开头，后面以小写字母+下划线的方式表示。  </p>
<ul>
<li>基于jQuery的项目中采用大写<code>J_</code>开头，主要用于PC端；  </li>
<li>基于Zepto的项目中采用大写<code>Z_</code>开头，主要用于移动端。   </li>
</ul>
<p>另外，选择器class或id置于CSS类名之后，如：</p>
<pre><code>&lt;div class=&quot;item-list J_item_list&quot;&gt;

&lt;/div&gt;
</code></pre><h4 id="-">基于业务模块的对象封装</h4>
<p>为了提高javascript代码的可维护性，降低耦合，在javascript代码编写中，我们采用基于业务模块的对象封装方式，即将同一业务模块，如系统通用、购物车、商品、用户等定义为对象，对象内定义模块使用的各类方法。例如：</p>
<pre><code>var item = {
  init: function(){
      …… 
  },
  getItemDetail: function(){
      ……
  }     
}
</code></pre><ul>
<li>其中对象的init方法中主要用于执行模块初始化的内容，如参数传入、事件绑定、初始化方法等。  </li>
<li>业务模块对象内函数的命名采用小驼峰法，即每个单词首字母大写并且第一个单词首字母小写，与PHP命名统一。</li>
</ul>

		</div>

		<script></script>
	</body>
</html>
